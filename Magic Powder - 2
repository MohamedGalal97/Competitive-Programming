/* Mohamed Galal */
#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#define PI 3.14159265359
#define mod = 1e9 + 7 
#define oo = 1e17
#define m_p make_pair
#define p_b push_back
#define ss second
#define ff first
#define rep(i,size) for(int i = 0 ; i < size ; i++)
#define sz(v) (int)v.size()
#define sz(s) (int)s.size()
#define sz(t) (int)t.size()
#define all(v)  ((v).begin()), ((v).end())
#define all(s)  ((s).begin()), ((s).end())
#define all(t)  ((t).begin()), ((t).end())
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
using namespace std;
void Mohamed_Galal() {
#ifndef ONLINE_JUDGE
	/*freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);*/
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);

}
const int N = 1e5 + 5;
int arr[N], grid[N];
ll n, k;
bool valid(ll Mix){
	ll res = 0;
	for (int i = 0; i < n; i++){
		if ((Mix*arr[i]) <= grid[i])
			continue;
		res += (Mix*arr[i]) - grid[i];
		if (res > k)
			return false;
	}
	return true;
}
ll BinarySearch(ll First, ll End){
	ll ans = 0;
	while (First <= End) {
		ll Mid = (First + End) >> 1;
		if (valid(Mid)){
			ans = Mid;
			First = Mid + 1;
		}
		else
			End = Mid - 1;
	}
	return ans;
}
int main()
{
	//Mohamed_Galal(); 
	scanf("%lld%lld", &n, &k);
	for (size_t i = 0; i < n; i++)
		cin >> arr[i];
	for (size_t i = 0; i < n; i++)
		cin >> grid[i];
	printf("%lld\n", BinarySearch(0, 1e10));
    #if _DEBUG
	system("pause");
    #endif
	return 0;
}
/* Mohamed Galal */
